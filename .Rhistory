setwd("D:/Software level 3 academic material/S2/Selected/selectedProject")
Original_csv_file = read.csv('breast cancer.csv')
Original_csv_file
mydata <- read.table("breast cancer.csv", header=TRUE,
sep=",", row.names="id")
mydata <- read.table("breast cancer.csv", header=TRUE,
sep=",")
View(Original_csv_file)
mydata <- read.table("breast cancer.csv", header=FALSE,
sep=",")
mydata
mydata.column
mydata.row
mydata <- read.table("breast cancer.csv", header=FALSE,
sep=",")
names(mydata) <- c('id','CT','UCSize','UCShape','MA','SECS','BN','BC','NN','Mitoses','Target Class')
mydata
rm(mydata$id)
head(10)
rm(mydata$id)
head(mydata)
mydata <- read.table("breast cancer.csv", header=FALSE,
sep=",")
names(mydata) <- c('id','CT','UCSize','UCShape','MA','SECS','BN','BC','NN','Mitoses','Target Class')
rm(mydata$id)
head(mydata)
mydata <- read.table("breast cancer.csv", header=FALSE,
sep=",")
names(mydata) <- c('id','CT','UCSize','UCShape','MA','SECS','BN','BC','NN','Mitoses','Target Class')
rm(mydata$id)
head(mydata)
class(mydata$id)
mydata$id
str(mydata)
BN_orgi
BN_orgi <- mydata$BN
BN_orgi
unique(BN_orgi)
for (value in mydata$BN) {
if(value == "?")
mydata$BN[value] = "0"
}
unique(mydata$BN)
for (value in mydata$BN) {
if(value == "?")
mydata$BN[value] <- "0"
}
unique(mydata$BN)
for (value in mydata$BN) {
if(value == "?")
mydata$BN$value <- "0"
}
unique(mydata$BN)
for (value in mydata$BN) {
if(value == "?")
mydata["BN"][value] <- "0"
}
unique(mydata$BN)
for (value in mydata$BN) {
if(value == "?")
value
}
unique(mydata$BN)
for (value in mydata$BN) {
if(value == "?")
print(value)
}
unique(mydata$BN)
for (value in 1:length(mydata$BN)) {
if(mydata$BN[value] == "?")
print(mydata$BN[value])
}
unique(mydata$BN)
for (value in 1:length(mydata$BN)) {
if(mydata$BN[value] == "?")
mydata$BN[value] = "0"
}
unique(mydata$BN)
for (value in 1:length(mydata$BN)) {
if(mydata$BN[value] == "?")
mydata$BN[value] = "0"
}
unique(mydata$BN)
as.numeric(mydata$BN)
unique(mydata$BN)
for (value in 1:length(mydata$BN)) {
if(mydata$BN[value] == "?")
mydata$BN[value] = "0"
}
unique(mydata$BN)
as.numeric(mydata$BN)
str(mydata$BN)
for (value in 1:length(mydata$BN)) {
if(mydata$BN[value] == "?")
mydata$BN[value] = "0"
}
unique(mydata$BN)
mydata$BN <- as.numeric(mydata$BN)
str(mydata$BN)
for (value in 1:length(mydata$BN)) {
if(mydata$BN[value] == "?")
mydata$BN[value] = "0"
}
mydata$BN <- as.numeric(mydata$BN)
unique(mydata$BN)
str(mydata$BN)
str(mydata)
# cleaning BN col
for (value in 1:length(mydata$BN)) {
if(mydata$BN[value] == "?")
mydata$BN[value] = "0"
}
mydata$BN <- as.integer(mydata$BN)
#to check
unique(mydata$BN)
str(mydata$BN)
str(mydata)
dataset <- read.table("breast cancer.csv", header=FALSE,
sep=",")
names(dataset) <- c('id','CT','UCSize','UCShape','MA','SECS','BN','BC','NN','Mitoses','Target Class')
str(dataset)
# cleaning BN col
for (value in 1:length(dataset$BN)) {
if(dataset$BN[value] == "?")
dataset$BN[value] = "0"
}
dataset$BN <- as.integer(dataset$BN)
#to check
unique(dataset$BN)
str(dataset$BN)
View(Original_csv_file)
View(dataset)
dataset <- dataset[ , 2:]
dataset <- dataset[ , 2:11]
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Target Class , SplitRatio = 0.7)
install.packages(caTools)
library(caTools)
set.seed(123)
split = sample.split(dataset$Target Class , SplitRatio = 0.7)
install.packages(caTools)
install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Target Class , SplitRatio = 0.7)
split = sample.split(dataset$Target Class , SplitRatio = 0.7)
split = sample.split(dataset$TargetClass , SplitRatio = 0.7)
split = sample.split(dataset$`Target Class` , SplitRatio = 0.7)
model = glm(formula = `Target Class` ~ . ,
family = binomial,
data = training_set)
set.seed(123)
split = sample.split(dataset$`Target Class` , SplitRatio = 0.7)
training_set = subset(dataset , split = TRUE)
test_set = subset(dataset , split = FALSE)
#implement LR model
model = glm(formula = `Target Class` ~ . ,
family = binomial,
data = training_set)
for (value in 1:length(dataset$BN)) {
if(dataset$BN[value] == "?")
dataset$BN[value] = "0"
# if the person don't have cancer "changing the value from 2 to 0 "
if(dataset$`Target Class`[value] == 2)
dataset$BN[value] = 0
}
dataset$BN <- as.integer(dataset$BN)
dataset <- dataset[ , 2:11]
for (value in 1:length(dataset$BN)) {
if(dataset$BN[value] == "?")
dataset$BN[value] = "0"
# if the person don't have cancer "changing the value from 2 to 0 "
if(dataset$`Target Class`[value] == 2)
dataset$BN[value] = 0
}
dataset$BN <- as.integer(dataset$BN)
dataset <- read.table("breast cancer.csv", header=FALSE,
sep=",")
names(dataset) <- c('id','CT','UCSize','UCShape','MA','SECS','BN','BC','NN','Mitoses','Target Class')
dataset <- dataset[ , 2:11]
for (value in 1:length(dataset$BN)) {
if(dataset$BN[value] == "?")
dataset$BN[value] = "0"
# if the person don't have cancer "changing the value from 2 to 0 "
if(dataset$`Target Class`[value] == 2)
dataset$`Target Class`[value] = 0
}
dataset$BN <- as.integer(dataset$BN)
str(dataset)
# cleaning BN col
dataset <- dataset[ , 2:11]
for (value in 1:length(dataset$BN)) {
if(dataset$BN[value] == "?")
dataset$BN[value] = "0"
# if the person don't have cancer "changing the value from 2 to 0 "
if(dataset$`Target Class`[value] == 2)
dataset$`Target Class`[value] = 0
#person have ccancer "from 4 to 1 "
if(dataset$`Target Class`[value] == 4)
dataset$`Target Class`[value] = 1
}
dataset$BN <- as.integer(dataset$BN)
install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$`Target Class` , SplitRatio = 0.7)
training_set = subset(dataset , split = TRUE)
test_set = subset(dataset , split = FALSE)
#implement LR model
model = glm(formula = `Target Class` ~ . ,
family = binomial,
data = training_set)
install.packages("caTools")
install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$`Target Class` , SplitRatio = 0.7)
training_set = subset(dataset , split = TRUE)
test_set = subset(dataset , split = FALSE)
#implement LR model
model = glm(formula = `Target Class` ~ . ,
family = binomial,
data = training_set)
install.packages("caTools")
View(model)
predictions = predict(model , type = "response" , newdata = test_set[-10])
predictions
predictions_prop = predict(model , type = "response" , newdata = test_set[-10])
predictions = ifelse(predictions_prop >0.5 , 1 , 0)
predictions
View(test_set)
cm = table(test_set[,10] , predictions )
cm
accuracy = (448/230) / (448+230+11+10)
accuracy
accuracy = (448+230) / (448+230+11+10)
accuracy
accuracy = (448+230) / (448+230+11+10) *100
accuracy
